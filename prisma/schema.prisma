// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  username             String   @unique
  email                String   @unique
  password             String
  role                 String   @default("user")
  fullName             String?
  phone                String?
  address              String?
  city                 String?
  state                String?
  zipCode              String?
  country              String?  @default("United States")
  preferredPaymentMethod String? @default("card")
  createdAt            DateTime @default(now())
  
  // Relations
  cartItems CartItem[]
  orders    Order[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String
  category    String
  rating      Float    @default(0)
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  
  // Relations
  cartItems  CartItem[]
  orderItems OrderItem[]
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  
  // Relations
  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Order {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @db.ObjectId
  status          String   @default("pending")
  total           Float
  shippingAddress String
  paymentMethod   String   @default("credit-card")
  createdAt       DateTime @default(now())
  
  // Relations
  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  
  // Relations
  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}
